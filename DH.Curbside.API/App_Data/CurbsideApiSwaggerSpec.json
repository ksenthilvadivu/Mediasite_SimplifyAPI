{  
   "swagger":"2.0",
   "info":{  
      "description":"This is a swagger spec API documentation for Curbside Application",
      "version":"1.0.0",
      "title":"Curbside API"
   },
   "tags":[  
      {  
         "name":"admins",
         "description":"Secured Admin-only calls"
      },
      {  
         "name":"user",
         "description":"users for whitelisting"
      },
      {  
         "name":"provisioning",
         "description":"whitelist users or domain for using submitter, reviewer mobile apps"
      },
      {  
         "name":"provider",
         "description":"healthcare providers who can sumbit or review a patient case"
      },
      {  
         "name":"auth",
         "description":"user authentication"
      },
      {  
         "name":"account",
         "description":"non-dignity user login account setup"
      },
      {  
         "name":"content",
         "description":"barrow media video content"
      }
   ],
   "paths":{  
      "/tenant":{  
         "get":{  
            "summary":"get list of organizations or COE groups",
            "operationId":"getTenant",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "$ref":"#/definitions/Tenant"
                  }
               }
            }
         }
      },
      "/{tenantId}/application":{  
         "get":{  
            "summary":"get client apps - submitter | reviewer | admin",
            "operationId":"getApplication",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "$ref":"#/definitions/Application"
                  }
               }
            }
         }
      },
      "/{tenantId}/whitelist":{  
         "get":{  
            "tags":[  
               "provisioning"
            ],
            "summary":"Get list of whitelisted users",
            "operationId":"getWhitelistUsers",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"query",
                  "name":"appId",
                  "description":"client app guid",
                  "required":true,
                  "type":"string",
                  "format":"uuid v4"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#definitions/User"
                     }
                  }
               }
            }
         }
      },
      "/{tenantId}/whitelist/{email}":{  
         "get":{  
            "tags":[  
               "provisioning"
            ],
            "summary":"Get user with whitelistinginfo",
            "operationId":"getWhitelistUser",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string",
                  "format":"uuid v4"
               },
               {  
                  "in":"path",
                  "name":"email",
                  "description":"user email address",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#definitions/User"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "provisioning"
            ],
            "summary":"Deprovision an user from whitelist",
            "operationId":"deprovisionUser",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"email",
                  "description":"user email address",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"query",
                  "name":"appId",
                  "description":"submitter or reviewer app guid",
                  "required":true,
                  "type":"string",
                  "format":"uuid v4"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               },
               "404":{  
                  "description":"user or app doesn't exist"
               }
            }
         }
      },
      "/{tenantId}/whitelistUser":{  
         "post":{  
            "tags":[  
               "provisioning"
            ],
            "summary":"Add new users to the whitelist",
            "operationId":"addWhitelistUser",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"List of whitelist user objects",
                  "required":true,
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/WhitelistUser"
                     }
                  }
               }
            ],
            "responses":{  
               "201":{  
                  "description":"Created"
               },
               "400":{  
                  "description":"Bad request"
               },
               "500":{  
                  "description":"Server error"
               }
            }
         }
      },
      "/{tenantId}/whitelistDomain":{  
         "post":{  
            "tags":[  
               "provisioning"
            ],
            "summary":"Add a new domain to the whitelist",
            "operationId":"addWhitelistDomain",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{  
                     "$ref":"#definitions/WhitelistDomain"
                  }
               }
            ],
            "responses":{  
               "201":{  
                  "description":"Created"
               },
               "404":{  
                  "description":"app doesn't exist"
               }
            }
         }
      },
      "/{tenantId}/invite":{  
         "post":{  
            "tags":[  
               "provisioning"
            ],
            "summary":"send email invitation with url to download the app",
            "operationId":"sendInvitation",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#definitions/Invitation"
                     }
                  }
               }
            ],
            "responses":{  
               "201":{  
                  "description":"Created"
               },
               "404":{  
                  "description":"user doesn't exist"
               }
            }
         }
      },
      "/{tenantId}/provider":{  
         "post":{  
            "tags":[  
               "provider"
            ],
            "summary":"Add a new provider",
            "operationId":"addProvider",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"User object that needs to be added",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/Provider"
                  }
               }
            ],
            "responses":{  
               "201":{  
                  "description":"Created"
               },
               "400":{  
                  "description":"Bad request"
               }
            }
         }
      },
      "/{tenantId}/provider/{providerId}":{  
         "get":{  
            "tags":[  
               "provider"
            ],
            "summary":"get provider profile",
            "operationId":"getProvider",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"providerId",
                  "description":"provider guid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "201":{  
                  "description":"Created",
                  "schema":{  
                     "$ref":"#/definitions/Provider"
                  }
               },
               "400":{  
                  "description":"Bad request"
               }
            }
         },
         "put":{  
            "tags":[  
               "provider"
            ],
            "summary":"update existing provider profile",
            "operationId":"updateProvider",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"providerId",
                  "description":"provider guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"User object that needs to be added",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/Provider"
                  }
               }
            ],
            "responses":{  
               "201":{  
                  "description":"Created"
               },
               "400":{  
                  "description":"Bad request"
               }
            }
         }
      },
      "/{tenantId}/validateEmail/{providerId}":{  
         "post":{  
            "tags":[  
               "provider"
            ],
            "summary":"send email for validation",
            "operationId":"sendEmailValidation",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"providerId",
                  "description":"provider guid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               },
               "404":{  
                  "description":"provider not found"
               }
            }
         }
      },
      "/{tenantId}/validateEmail/{providerId}/{email}":{  
         "put":{  
            "tags":[  
               "provider"
            ],
            "summary":"verify email & mark as verified",
            "operationId":"verifyEmailValidation",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"providerId",
                  "description":"provider guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"email",
                  "description":"email address",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               },
               "404":{  
                  "description":"provider not found"
               }
            }
         }
      },
      "/{tenantId}/validatePhone/{providerId}":{  
         "post":{  
            "tags":[  
               "provider"
            ],
            "summary":"send SMS code for validation",
            "operationId":"sendPhoneValidation",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
              {
                "in": "path",
                "name": "providerId",
                "description": "provider guid",
                "required": true,
                "type": "string"
              }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               },
               "404":{  
                  "description":"provider not found"
               }
            }
         }
      },
      "/{tenantId}/validatePhone/{providerId}/{code}":{  
         "put":{  
            "tags":[  
               "provider"
            ],
            "summary":"verify code & mark as verified",
            "operationId":"verifyPhoneValidation",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"providerId",
                  "description":"provider guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"code",
                  "description":"code",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               },
               "404":{  
                  "description":"provider not found"
               }
            }
         }
      },
      "/{tenantId}/case":{  
         "post":{  
            "tags":[  
               "case"
            ],
            "summary":"Add a new case for a patient",
            "operationId":"addPatientCase",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{  
                     "$ref":"#definitions/PatientCase"
                  }
               }
            ],
            "responses":{  
               "201":{  
                  "description":"Created"
               }
            }
         },
         "get":{  
            "tags":[  
               "case"
            ],
            "summary":"get list of cases, given providerId return only submitted or reviewed",
            "operationId":"getPatientCase",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"query",
                  "name":"providerId",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "$ref":"#definitions/PatientCase"
                  }
               }
            }
         }
      },
      "/{tenantId}/case/{caseId}":{  
         "get":{  
            "tags":[  
               "case"
            ],
            "summary":"get invidual case details",
            "operationId":"getPatientCaseDetail",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"caseId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "$ref":"#definitions/PatientCase"
                  }
               }
            }
         },
         "put":{  
            "tags":[  
               "case"
            ],
            "summary":"update case status or review info",
            "operationId":"updatePatientCase",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"caseId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "$ref":"#definitions/PatientCase"
                  }
               }
            }
         }
      },
      "/{tenantId}/case/{caseId}/referred":{  
         "post":{  
            "tags":[  
               "case"
            ],
            "summary":"refer a case to reviewed physician",
            "operationId":"referPatientCase",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"caseId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         }
      },
      "/{tenantId}/case/{caseId}/image":{  
         "post":{  
            "tags":[  
               "case"
            ],
            "summary":"upload an image to blobstorage",
            "operationId":"uploadPatientCaseImage",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"caseId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "$ref":"#definitions/PatientCase"
                  }
               }
            }
         }
      },
      "/{tenantId}/case/{caseId}/image/{imageId}":{  
         "get":{  
            "tags":[  
               "case"
            ],
            "summary":"get image from blobstorage",
            "operationId":"getPatientCaseImage",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"caseId",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"path",
                  "name":"imageId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "$ref":"#definitions/PatientCase"
                  }
               }
            }
         }
      },
      "/{tenantId}/content":{  
         "post":{  
            "tags":[  
               "content"
            ],
            "summary":"search BNI media site content",
            "operationId":"searchContent",
            "produces":[  
               "application/json"
            ],
            "consumes":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{  
                     "$ref":"#definitions/ContentQuery"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#definitions/ContentResult"
                  }
               }
            }
         }
      },
      "/{tenantId}/auth/login":{  
         "post":{  
            "tags":[  
               "auth"
            ],
            "summary":"account sign in for dignity & non-dignity user",
            "description":"this operation used to login as dignity or non-dignity provider based on isActiveDirectory flag",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{  
                     "$ref":"#definitions/Login"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         }
      },
      "/{tenantId}/auth/logout":{  
         "post":{  
            "tags":[  
               "auth"
            ],
            "summary":"account sign out for dignity & non-dignity user",
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         }
      },
      "/{tenantId}/auth/reAuth":{  
         "post":{  
            "tags":[  
               "auth"
            ],
            "summary":"get new access token from refresh token",
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         }
      },
      "/{tenantId}/account":{  
         "post":{  
            "tags":[  
               "account"
            ],
            "summary":"register non-dignity user account in Okta",
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         }
      },
      "/{tenantId}/account/forgotLink":{  
         "get":{  
            "tags":[  
               "account"
            ],
            "summary":"get dignity user portal url to reset password",
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         }
      },
      "/{tenantId}/account/forgotPassword":{  
         "get":{  
            "tags":[  
               "account"
            ],
            "summary":"get non-dignity user security question from Okta",
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"query",
                  "name":"username",
                  "description":"user signin email",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         },
         "post":{  
            "tags":[  
               "account"
            ],
            "summary":"verify non-dignity user security answer aginst Okta",
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"query",
                  "name":"username",
                  "description":"user signin email",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         }
      },
      "/{tenantId}/account/resetPassword":{  
         "post":{  
            "tags":[  
               "account"
            ],
            "summary":"change non-dignity user password in Okta",
            "parameters":[  
               {  
                  "in":"path",
                  "name":"tenantId",
                  "description":"organization guid",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"query",
                  "name":"username",
                  "description":"user signin email",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               }
            }
         }
      }
   },
   "definitions":{  
      "Tenant":{  
         "type":"object",
         "required":[  
            "tenantId",
            "tenantName"
         ],
         "properties":{  
            "tenantId":{  
               "type":"string",
               "format":"uuid v4"
            },
            "tenantName":{  
               "type":"string"
            }
         }
      },
      "Application":{  
         "type":"object",
         "required":[  
            "applicationId",
            "applicationName"
         ],
         "properties":{  
            "applicationId":{  
               "type":"string",
               "format":"uuid v4"
            },
            "applicationName":{  
               "type":"string"
            }
         }
      },
      "User":{  
         "type":"object",
         "required":[  
            "userId",
            "prefix",
            "firstName",
            "lastName",
            "email",
            "appId"
         ],
         "properties":{  
            "userId":{  
               "type":"integer"
            },
            "prefix":{  
               "type":"string"
            },
            "firstName":{  
               "type":"string"
            },
            "lastName":{  
               "type":"string"
            },
            "email":{  
               "type":"string"
            },
            "appId":{  
               "type":"string",
               "format":"uuid v4"
            }
         }
      },
      "WhitelistUser":{  
         "type":"object",
         "required":[  
            "prefix",
            "firstName",
            "lastName",
            "email",
            "appId",
            "invite"
         ],
         "properties":{  
            "prefix":{  
               "type":"string"
            },
            "firstName":{  
               "type":"string"
            },
            "lastName":{  
               "type":"string"
            },
            "email":{  
               "type":"string"
            },
            "appId":{  
               "type":"string",
               "format":"uuid v4"
            },
            "invite":{  
               "type":"boolean"
            }
         }
      },
      "WhitelistDomain":{  
         "type":"object",
         "required":[  
            "domainName",
            "appId"
         ],
         "properties":{  
            "domainName":{  
               "type":"string"
            },
            "appId":{  
               "type":"string",
               "format":"uuid v4"
            }
         }
      },
      "Invitation":{  
         "type":"object",
         "required":[  
            "userId",
            "appId"
         ],
         "properties":{  
            "userId":{  
               "type":"integer"
            },
            "appId":{  
               "type":"string",
               "format":"uuid v4"
            }
         }
      },
      "Provider":{  
         "type":"object",
         "required":[  
            "prefix",
            "firstName",
            "lastName",
            "speciality",
            "officeEmail",
            "officePhone",
            "mobilePhone",
            "picture"
         ],
         "properties":{  
            "prefix":{  
               "type":"string"
            },
            "firstName":{  
               "type":"string"
            },
            "lastName":{  
               "type":"string"
            },
            "speciality":{  
               "type":"string"
            },
            "officeEmail":{  
               "type":"string"
            },
            "officePhone":{  
               "type":"string"
            },
            "mobilePhone":{  
               "type":"string"
            },
            "picture":{  
               "type":"string"
            }
         }
      },
      "PatientCase":{  
         "type":"object",
         "required":[  
            "caseTitle",
            "caseDescription",
            "submitDate"
         ],
         "properties":{  
            "caseTitle":{  
               "type":"string"
            },
            "caseDescription":{  
               "type":"string"
            },
            "status":{  
               "type":"string"
            },
            "submitDate":{  
               "type":"string",
               "format":"date-time"
            }
         }
      },
      "ContentQuery":{  
         "type":"object",
         "required":[  
            "keyword",
            "pageStart",
            "pageEnd",
            "limit"
         ],
         "properties":{  
            "keyword":{  
               "type":"string"
            },
            "pageStart":{  
               "type":"integer"
            },
            "pageEnd":{  
               "type":"integer"
            },
            "limit":{  
               "type":"integer"
            }
         }
      },
      "ContentResult":{  
         "type":"object",
         "required":[  
            "title",
            "description",
            "url"
         ],
         "properties":{  
            "title":{  
               "type":"string"
            },
            "description":{  
               "type":"string"
            },
            "url":{  
               "type":"string"
            }
         }
      },
      "Login":{  
         "type":"object",
         "required":[  
            "userName",
            "password",
            "isActiveDirectory"
         ],
         "properties":{  
            "userName":{  
               "type":"string"
            },
            "password":{  
               "type":"string"
            },
            "isActiveDirectory":{  
               "type":"boolean"
            },
            "activeDirectoryDomain":{  
               "type":"string"
            }
         }
      }
   },
   "host":"virtserver.swaggerhub.com",
   "basePath":"/dignity/curbsideapi/1.0.0",
   "schemes":[  
      "https"
   ]
}